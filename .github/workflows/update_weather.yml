name: Update Weather Data Every Minute

on:
  schedule:
    - cron: "*/1 * * * *"  # Every 1 minute
  workflow_dispatch:

jobs:
  update-weather:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Pull latest clean_weather.csv from DATA repo
        env:
          DATA_REPO_TOKEN: ${{ secrets.DATA_REPO_TOKEN }}
        run: |
          mkdir -p data  # <-- CRIA a pasta se nÃ£o existe!
          rm -f data/clean_weather.csv
          git clone https://x-access-token:${DATA_REPO_TOKEN}@github.com/ostherhuspl/weather-data-pipeline-data.git data-repo
          if [ -f data-repo/clean_weather.csv ]; then
            cp data-repo/clean_weather.csv data/clean_weather.csv
          fi

      - name: Run weather_collector.py
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        run: python weather_collector.py

      - name: Run transform_weather.py
        run: python transform_weather.py

      - name: Commit and push clean_weather.csv to DATA repo
        env:
          DATA_REPO_TOKEN: ${{ secrets.DATA_REPO_TOKEN }}
        run: |
          cd data-repo
          git config user.name "actions-user"
          git config user.email "actions@github.com"
          git pull origin main --rebase || true
          cp ../data/clean_weather.csv clean_weather.csv
          git add clean_weather.csv
          git commit -m "update: new weather data via GitHub Actions" || echo "no changes"
          git push origin main
