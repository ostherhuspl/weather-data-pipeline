name: Update Weather Data Every Minute

on:
  schedule:
    - cron: "*/1 * * * *"  # Every 1 minute
  workflow_dispatch:

jobs:
  update-weather:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Pull latest code before running scripts
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
          git reset --hard HEAD
          git pull --rebase --autostash

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run weather_collector.py
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        run: python weather_collector.py

      - name: Run transform_weather.py
        run: python transform_weather.py

      - name: Push clean_weather.csv to DATA repo
        env:
          DATA_REPO_TOKEN: ${{ secrets.DATA_REPO_TOKEN }}
        run: |
          cd data
          git init
          git config user.name "actions-user"
          git config user.email "actions@github.com"
          git remote add origin https://x-access-token:${DATA_REPO_TOKEN}@github.com/ostherhuspl/weather-data-pipeline-data.git || true
          git fetch origin main || true
          git checkout main || git checkout -b main
          git pull origin main --rebase || true
          # SÃ³ faz commit se o arquivo mudou
          if ! cmp -s clean_weather.csv clean_weather.csv; then
            git add clean_weather.csv
            git commit -m "update: new weather data via GitHub Actions" || echo "no changes"
            git push origin main
          else
            echo "No changes to commit"
          fi
